spring.config.import: classpath:/security-config.yml
# Эти три тире обозначают, что это мы создаём отдельный YAML файл.
# Всё это нужно чтобы можно было перезаписывать конфигурацию, подтянутую из security-config.yml
# Подробнее https://stackoverflow.com/questions/65216091/override-property-with-my-profile-dev-in-spring-boot-2-4
---
spring.config.import: classpath:/eureka-config.yml
---


server:
  port: 8013
app:
  test-message:
    current-service: "ChatService"

eureka:
  client:
    enabled: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8020/eureka/
  instance:
    prefer-ip-address: true

spring:
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:8040}
    username: ${RABBITMQ_USER:admin}
    password: ${RABBITMQ_PASSWORD:admin}
  cloud.stream.bindings:
    newNotificationEvent-in-0:
      destination: NOTIFICATION_EVENT_NEW_NOTIFICATION



  application:
    name: chat-service
  devtools:
    restart:
      enabled: true
  flyway:
    locations: classpath:migrations
    url: "jdbc:postgresql://localhost:6666/chat_db"
    user: "chat_user"
    password: "chat_password"

  datasource:
    driver-class-name: org.postgresql.Driver
    url: "jdbc:postgresql://localhost:6666/chat_db"
    username: "chat_user"
    password: "chat_password"

  jpa:
    hibernate:
      ddl-auto: update
      generate-ddl: true # Делаем так, чтобы Spring сам управлял сущностями БД
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true


  mvc: # Чтобы работали HTTP методы PUT, PATCH, DELETE
    hiddenmethod:
      filter:
        enabled: true